<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title><%= board.name %></title>
    <link rel="stylesheet" href="/style/style.css">
    <link rel="stylesheet" href="/style/board.css">
    <link rel="stylesheet" href="/style/chat.css">
    <link rel="icon" type="image/x-icon" href="https://i.postimg.cc/fL9NL4F6/logo.png">
</head>
<body>

<div class="header">
    <h1>Whaaa</h1>
    <div class="home-buttons">
        <a href="/">Home</a>
        <a href ="/discovery">Discovery</a>
        <a href="/events">Events</a>
        <a href="/rnd">Free Space</a>
        <a href="/about-us">About us</a>
    </div>
    <div class="user-buttons">
        <% if (user) { %>
            <span>Logged in as: <%= user %></span>
            <a href="/logout">Logout</a>
        <% } else { %>
            <a href="/login">Log in</a>
            <a href="/register">Register</a>
        <% } %>
    </div>
</div>
<!-- END HEADER -->

<div class="profile-header-container">
    <img class="header-image" src="/<%= board.header_image %>" alt="Header Image"
         onerror="this.onerror=null;this.src='/uploads/default_header.png';">
    <img class="profile-image" src="/<%= board.profile_image %>" alt="Profile Image"
         onerror="this.onerror=null;this.src='/uploads/default_profile.png';">
</div>

<div class="board-content">
    <h1 class="board-Title"><%= board.name %></h1>
    <p class="board-description"><%= board.description %></p>
    <p class="board-owner">Owner: <%= ownerName %></p>
    <% if (currentUserId !== ownerId && !isMember) { %>
        <form action="/join/<%= board.id %>" method="POST">
            <button id="joinButton" type="submit">Join Board</button>
        </form>
    <% } %>
</div>

<div class="board-general">
    <div class="board-header">
        <div class="board-tabs">
            <button class="tab-button" onclick="openTab('posts')">Posts</button>
            <button class="tab-button" onclick="openTab('chat')">Chat</button>
            <button class="tab-button" onclick="openTab('source')">Source</button>
            <button class="tab-button" onclick="openTab('projects')">Projects</button>
        </div>
    </div>

    <div id="posts" class="tab-content">
        <div>
            <h2>Posts</h2>
            <button id="openPostModalButton">Create a New Post</button>

            <% if (posts.length === 0) { %>
                <p>No posts yet. Be the first to post!</p>
            <% } else { %>
                <div class="posts-list">
                    <% posts.forEach(post => { %>
                        <div class="post-card">
                            <h3><%= post.title %></h3>
                            <p><%= post.content %></p>

                            <% if (post.type === 'image' && post.image) { %>
                                <img src="/<%= post.image %>" alt="Post Image" class="post-image"/>
                            <% } %>

                            <p class="post-meta">
                                Posted on <%= new Date(post.createdAt).toLocaleString() %>
                                by User: <%= post.username %>
                            </p>

                            <% if (post.hashtags.length) { %>
                                <div class="post-hashtags">
                                    <% post.hashtags.forEach(tag => { %>
                                        <span class="hashtag-item">#<%= tag %></span>
                                    <% }) %>
                                </div>
                            <% } %>
                        </div>
                    <% }) %>
                </div>
            <% } %>

            <div>
                <div id="createPostModal" class="modal">
                    <div class="modal-content">
                        <span class="close-button" id="closePostModalButton">&times;</span>
                        <div class="create-post-container">
                            <h2>Create a New Post</h2>
                            <form id="createPostForm" enctype="multipart/form-data">
                                <label for="title">Title:</label>
                                <input type="text" id="title" name="title" required>

                                <label for="content">Content:</label>
                                <textarea id="content" name="content" required></textarea>

                                <label for="type">Type:</label>
                                <select id="type" name="type" required>
                                    <option value="text">Text</option>
                                    <option value="image">Image</option>
                                </select>

                                <label for="hashtagInput">Add Hashtags:</label>
                                <input type="text" id="hashtagInput" placeholder="Enter a hashtag">
                                <button type="button" id="addHashtagButton">Add Hashtag</button>
                                <div id="hashtagList"></div>
                                <input type="hidden" id="hashtags" name="hashtag">

                                <label for="image">Image:</label>
                                <input type="file" id="image" name="image" accept="image/*">

                                <% if (isOwner) { %>
                                    <div id="projectField">
                                        <label for="projectId">Select Project:</label>
                                        <select id="projectId" name="projectId">
                                            <option value="">None</option>
                                        </select>
                                    </div>
                                <% } %>

                                <input type="hidden" id="boardId" name="boardId" value="<%= board.id %>">
                                <button type="submit">Create Post</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const openPostModalButton = document.getElementById('openPostModalButton');
                const closePostModalButton = document.getElementById('closePostModalButton');
                const createPostModal = document.getElementById('createPostModal');
                const hashtagInput = document.getElementById('hashtagInput');
                const addHashtagButton = document.getElementById('addHashtagButton');
                const hashtagList = document.getElementById('hashtagList');
                const hashtagsField = document.getElementById('hashtags');
                const projectDropdown = document.getElementById('projectId');
                let hashtags = [];

                if (projectDropdown) {
                    fetch(`/board/<%= board.id %>/projects`)
                        .then(res => res.json())
                        .then(projects => {
                            projects.forEach(proj => {
                                const option = document.createElement('option');
                                option.value = proj.id;
                                option.textContent = proj.name;
                                projectDropdown.appendChild(option);
                            });
                        })
                        .catch(console.error);
                }

                openPostModalButton.addEventListener('click', () => {
                    createPostModal.style.display = 'block';
                });
                closePostModalButton.addEventListener('click', () => {
                    createPostModal.style.display = 'none';
                });
                window.addEventListener('click', (event) => {
                    if (event.target === createPostModal) {
                        createPostModal.style.display = 'none';
                    }
                });

                addHashtagButton.addEventListener('click', () => {
                    const hashtag = hashtagInput.value.trim();
                    if (hashtag && !hashtags.includes(hashtag)) {
                        hashtags.push(hashtag);
                        updateHashtagList();
                        hashtagInput.value = '';
                    }
                });

                function updateHashtagList() {
                    hashtagList.innerHTML = '';
                    hashtags.forEach((tag, index) => {
                        const tagElement = document.createElement('span');
                        tagElement.textContent = `#${tag}`;
                        tagElement.className = 'hashtag-item';
                        const removeButton = document.createElement('button');
                        removeButton.textContent = 'x';
                        removeButton.className = 'remove-hashtag';
                        removeButton.addEventListener('click', () => {
                            hashtags.splice(index, 1);
                            updateHashtagList();
                        });
                        tagElement.appendChild(removeButton);
                        hashtagList.appendChild(tagElement);
                    });
                    hashtagsField.value = hashtags.join(',');
                }

                document.getElementById('createPostForm').addEventListener('submit', async (event) => {
                    event.preventDefault();
                    const form = event.target;
                    const formData = new FormData(form);
                    formData.set('hashtags', hashtags.join(','));
                    try {
                        const response = await fetch('/createPost', { method: 'POST', body: formData });
                        if (response.ok) {
                            alert('Post created successfully!');
                            window.location.reload();
                        } else {
                            const errorData = await response.json();
                            alert(`Error: ${errorData.error || 'Failed to create post'}`);
                        }
                    } catch (error) {
                        console.error(error);
                        alert('An error occurred while creating the post.');
                    }
                });
            });
        </script>
    </div>

    <div id="chat" class="tab-content" style="display:none;">
        <h2>Chat</h2>

        <div class="chat-flex-container">
            <div class="chat-main">
                <div id="chatWindow" class="chat-window"></div>
                <form id="chatForm" class="chat-form">
                    <input type="text" id="chatInput" class="chat-input" placeholder="Type your message…" required autocomplete="off" />
                    <button type="submit" class="chat-send-btn">Send</button>
                </form>
            </div>

            <aside class="chat-online-container">
                <h3>Online</h3>
                <ul id="onlineUsersList" class="online-list"></ul>
            </aside>
        </div>


        <script src="/socket.io/socket.io.js"></script>
        <script>
            (function() {
                const boardId = "<%= board.id %>";
                const currentUser = {
                    id: "<%= currentUserId %>",
                    username: '<%= user %>',
                    avatar: '<%= userAvatar %>'
                };
                const socket = io();

                socket.emit('joinBoard', boardId);
                socket.emit('registerUser', currentUser);

                const onlineList = document.getElementById('onlineUsersList');
                socket.on('onlineUsers', users => {
                    onlineList.innerHTML = '';
                    users.forEach(u => {
                        const li = document.createElement('li');
                        li.className = 'online-user';
                        li.innerHTML = `
                            <img src="/${u.avatar}" class="online-avatar" alt="${u.username}">
                            <span class="online-name">${u.username}</span>
                            <span class="role-badge ${u.role}">${u.role}</span>
                        `;
                        onlineList.appendChild(li);
                    });
                });

                function renderMessage(msg) {
                    const wrapper = document.createElement('div');
                    wrapper.classList.add('chat-message');
                    wrapper.innerHTML = `
    <img src="/${msg.avatar}" alt="${msg.username}" class="chat-avatar"/>
    <div class="chat-message-content">
      <div class="chat-message-header">
        <strong>${msg.username}</strong>
        <time>${new Date(msg.createdAt)
                        .toLocaleTimeString([], {hour:'2-digit', minute:'2-digit'})}</time>
      </div>
      <p class="chat-message-body">${msg.content}</p>
    </div>
  `;
                    document.getElementById('chatWindow').appendChild(wrapper);
                    document.getElementById('chatWindow').scrollTop = document.getElementById('chatWindow').scrollHeight;
                }

                fetch(`/chat/${boardId}/messages`)
                    .then(res => res.json())
                    .then(history => history.forEach(renderMessage))
                    .catch(console.error);

                socket.on('message', renderMessage);

                document.getElementById('chatForm').addEventListener('submit', e => {
                    e.preventDefault();
                    const content = document.getElementById('chatInput').value.trim();
                    if (!content) return;
                    socket.emit('newMessage', { boardId, content, user: currentUser });
                    document.getElementById('chatInput').value = '';
                });
            })();
        </script>
    </div>


    <div id="source" class="tab-content" style="display:none;">
        <h2>Source</h2>
    </div>

    <div id="projects" class="tab-content" style="display: none">
        <h2><%= isOwner ? "Your Projects" : "Projects" %></h2>

        <% if (isOwner) { %>

            <button id="openProjectModalButton">Create a New Project</button>
            <div id="createProjectModal" class="modal">
                <div class="modal-content">
                    <span class="close-button" id="closeProjectModalButton">&times;</span>
                    <div class="create-project-container">
                        <h2>Create a New Project</h2>
                        <form id="createProjectForm" method="POST" action="/createProject">
                            <label for="projectName">Project Name:</label>
                            <input type="text" id="projectName" name="name" required>

                            <label for="projectDescription">Description:</label>
                            <textarea id="projectDescription" name="description" required></textarea>

                            <input type="hidden" name="boardId" value="<%= board.id %>">
                            <button type="submit">Create Project</button>
                        </form>
                    </div>
                </div>
            </div>
        <% } %>

        <ul id="projectList" class="project-list">
            <% projects.forEach(prj => { %>
                <li
                        class="project-item"
                        data-id="<%= prj.id %>"
                        data-name="<%= prj.name.replace(/"/g,'&quot;') %>"
                        data-desc="<%= prj.description.replace(/"/g,'&quot;') %>"
                >
                    <strong><%= prj.name %></strong>
                </li>
            <% }) %>
        </ul>

        <div id="projectModal" class="modal">
            <div class="modal-content project-modal">
                <span id="closeProjectModal" class="close-button">&times;</span>
                <div class="project-detail">
                    <aside class="project-posts">
                        <div id="projectPostsList" class="posts-list"></div>
                    </aside>
                    <section class="project-info">
                        <h3 id="projectName"></h3>
                        <p id="projectDesc"></p>
                    </section>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function openTab(tabName) {
        var i, tabcontent, tabbuttons;
        tabcontent = document.getElementsByClassName("tab-content");
        for (i = 0; i < tabcontent.length; i++) tabcontent[i].style.display = "none";
        tabbuttons = document.getElementsByClassName("tab-button");
        for (i = 0; i < tabbuttons.length; i++) tabbuttons[i].className = tabbuttons[i].className.replace(" active", "");
        document.getElementById(tabName).style.display = "block";
        event.currentTarget.className += " active";
    }
    document.addEventListener('DOMContentLoaded', () => {
        document.querySelector('.tab-button').click();
        const openBtn = document.getElementById('openProjectModalButton');
        const closeBtn = document.getElementById('closeProjectModalButton');
        const modal = document.getElementById('createProjectModal');
        if (openBtn && closeBtn && modal) {
            openBtn.addEventListener('click', () => modal.style.display = 'block');
            closeBtn.addEventListener('click', () => modal.style.display = 'none');
            window.addEventListener('click', e => { if (e.target === modal) modal.style.display = 'none'; });
        }
            document.getElementById('projectList').addEventListener('click', async e => {
            const li = e.target.closest('.project-item');
            if (!li) return;

            const projectId   = li.dataset.id;
            const projectName = li.dataset.name;
            const projectDesc = li.dataset.desc;

            document.getElementById('projectName').textContent = projectName;
            document.getElementById('projectDesc').textContent = projectDesc;

            const container = document.getElementById('projectPostsList');
            container.innerHTML = '';

            try {
            const res   = await fetch(`/project/${projectId}/posts`);
            const posts = await res.json();

            posts.forEach(post => {
            const card = document.createElement('div');
            card.className = 'post-card';

            const h3 = document.createElement('h3');
            h3.innerText = post.title;
            card.appendChild(h3);

            const p = document.createElement('p');
            p.innerText = post.content;
            card.appendChild(p);

            if (post.type === 'image' && post.image) {
            const img = document.createElement('img');
            img.src       = `/${post.image}`;
            img.alt       = post.title;
            img.className = 'post-image';
            card.appendChild(img);
        }

            const meta = document.createElement('p');
            meta.className = 'post-meta';
            meta.innerText =
            `Posted on ${new Date(post.createdAt).toLocaleString()} by ${post.username}`;
            card.appendChild(meta);

            container.appendChild(card);
        });
        } catch (err) {
            console.error('Failed loading project posts:', err);
        }

            document.getElementById('projectModal').style.display = 'block';
        });

    document.getElementById('closeProjectModal').addEventListener('click', () => {
                document.getElementById('projectModal').style.display = 'none';
            });
            window.addEventListener('click', e => {
                if (e.target === document.getElementById('projectModal'))
                    document.getElementById('projectModal').style.display = 'none';
            });
        });
</script>
</body>
</html>
